
version: '3'
services:
  gekko:
    build: ./
    env_file:
      - .env
    environment:
     - NODE_ENV=${NODE_ENV:-production}
     - HOST=${HOST:-localhost}
     - API_HOST=${API_HOST:-0.0.0.0}
     - PORT=${PORT:-3000}
     - ADAPTER=${ADAPTER:-sqlite}
     - HEADLESS=${HEADLESS:-true}
## optionally uncomment if you wish to use nginx as a frontend
#     - VIRTUAL_HOST=gekko
#     - PORT=3000
#     - DOMAIN=gekko
    image: "${IMAGE_NAME:-gekko:latest}"
    ports: # you can comment this out when using the nginx frontend
      - "${PORT:-3000}:${PORT-3000}"
#    volumes:
#      - /opt/data/history:/usr/src/app/history
#      - /opt/data/config.js:/usr/src/app/config.js
#    links:
#      - redis
#      - postgresql
#  redis:
#    image: redis:latest
#    volumes:
#      - ./volumes/redis:/data
## optionally uncomment if you wish to use nginx as a frontend
#  nginx:
#    restart: always
#    image: jwilder/nginx-proxy
#    ports:
#     - "80:80"
#    volumes:
#     - /var/run/docker.sock:/tmp/docker.sock:ro
# optionally uncomment if you wish to use postgresql as a db
# docker volume create --name postgres -d local
#  postgresql:
#    restart: always
#    #container_name: postgres_db
#    image: postgres:latest
#    ports:
#      - 5432:5432
#    volumes:
#      - postgres:/var/lib/postgresql/data:rw
#    environment:
#      POSTGRES_DB: gekko
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: pass

#volumes:
#  postgres:
#    external: true
#  history: 
#    external: true
#  config:
#    external: true